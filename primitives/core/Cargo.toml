[package]
name = "sp-core"
version = "6.0.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
license = "Apache-2.0"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
description = "Shareable Substrate types."
documentation = "https://docs.rs/sp-core"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = [
	"derive",
	"max-encoded-len",
] , registry = "local" }
scale-info = { version = "2.1.1", default-features = false, features = ["derive"] , registry = "local" }
log = { version = "0.4.17", default-features = false , registry = "local" }
serde = { version = "1.0.136", optional = true, features = ["derive"] , registry = "local" }
byteorder = { version = "1.3.2", default-features = false , registry = "local" }
primitive-types = { version = "0.12.0", default-features = false, features = ["codec", "scale-info"] , registry = "local" }
impl-serde = { version = "0.4.0", optional = true , registry = "local" }
wasmi = { version = "0.13", optional = true , registry = "local" }
hash-db = { version = "0.15.2", default-features = false , registry = "local" }
hash256-std-hasher = { version = "0.15.2", default-features = false , registry = "local" }
base58 = { version = "0.2.0", optional = true , registry = "local" }
rand = { version = "0.7.3", optional = true, features = ["small_rng"] , registry = "local" }
substrate-bip39 = { version = "0.4.4", optional = true , registry = "local" }
tiny-bip39 = { version = "0.8.2", optional = true , registry = "local" }
regex = { version = "1.6.0", optional = true , registry = "local" }
num-traits = { version = "0.2.8", default-features = false , registry = "local" }
zeroize = { version = "1.4.3", default-features = false , registry = "local" }
secrecy = { version = "0.8.0", default-features = false , registry = "local" }
lazy_static = { version = "1.4.0", default-features = false, optional = true , registry = "local" }
parking_lot = { version = "0.12.1", optional = true , registry = "local" }
sp-std = { version = "7.0.0", default-features = false, path = "../std" , registry = "local" }
sp-debug-derive = { version = "10.0.0", default-features = false, path = "../debug-derive" , registry = "local" }
sp-storage = { version = "7.0.0", default-features = false, path = "../storage" , registry = "local" }
sp-externalities = { version = "0.13.0", optional = true, path = "../externalities" , registry = "local" }
parity-util-mem = { version = "0.12.0", default-features = false, features = ["primitive-types"] , registry = "local" }
futures = { version = "0.3.21", optional = true , registry = "local" }
dyn-clonable = { version = "0.9.0", optional = true , registry = "local" }
thiserror = { version = "1.0.30", optional = true , registry = "local" }
bitflags = { version = "1.3", registry = "local" }

# full crypto
array-bytes = { version = "4.1", optional = true , registry = "local" }
ed25519-zebra = { version = "3.1.0", default-features = false, optional = true , registry = "local" }
blake2 = { version = "0.10.4", default-features = false, optional = true , registry = "local" }
schnorrkel = { version = "0.9.1", features = [
	"preaudit_deprecated",
	"u64_backend",
], default-features = false, optional = true , registry = "local" }
libsecp256k1 = { version = "0.7", default-features = false, features = ["static-context"], optional = true , registry = "local" }
merlin = { version = "2.0", default-features = false, optional = true , registry = "local" }
secp256k1 = { version = "0.24.0", default-features = false, features = ["recovery", "alloc"], optional = true , registry = "local" }
ss58-registry = { version = "1.29.0", default-features = false , registry = "local" }
sp-core-hashing = { version = "6.0.0", path = "./hashing", default-features = false, optional = true , registry = "local" }
sp-runtime-interface = { version = "6.0.0", default-features = false, path = "../runtime-interface" , registry = "local" }

[dev-dependencies]
sp-serializer = { version = "8.0.0", path = "../serializer" , registry = "local" }
rand = { version = "0.7.2", registry = "local" }
criterion = { version = "0.3.3", registry = "local" }
serde_json = { version = "1.0", registry = "local" }
sp-core-hashing-proc-macro = { version = "6.0.0", path = "./hashing/proc-macro" , registry = "local" }

[[bench]]
name = "bench"
harness = false

[lib]
bench = false

[features]
default = ["std"]
std = [
	"parity-util-mem/std",
	"merlin?/std",
	"full_crypto",
	"log/std",
	"thiserror",
	"wasmi",
	"lazy_static",
	"parking_lot",
	"primitive-types/std",
	"primitive-types/serde",
	"primitive-types/byteorder",
	"primitive-types/rustc-hex",
	"impl-serde",
	"codec/std",
	"scale-info/std",
	"hash256-std-hasher/std",
	"hash-db/std",
	"sp-std/std",
	"serde",
	"blake2/std",
	"array-bytes",
	"ed25519-zebra/std",
	"base58",
	"substrate-bip39",
	"tiny-bip39",
	"byteorder/std",
	"rand",
	"schnorrkel/std",
	"regex",
	"num-traits/std",
	"secp256k1/std",
	"secp256k1/global-context",
	"sp-core-hashing/std",
	"sp-debug-derive/std",
	"sp-externalities",
	"sp-storage/std",
	"sp-runtime-interface/std",
	"ss58-registry/std",
	"zeroize/alloc",
	"secrecy/alloc",
	"futures",
	"futures/thread-pool",
	"libsecp256k1/std",
	"dyn-clonable",
]

# This feature enables all crypto primitives for `no_std` builds like microcontrollers
# or Intel SGX.
# For the regular wasm runtime builds this should not be used.
full_crypto = [
	"array-bytes",
	"ed25519-zebra",
	"blake2",
	"schnorrkel",
	"libsecp256k1",
	"secp256k1",
	"sp-core-hashing",
	"sp-runtime-interface/disable_target_static_assertions",
	"merlin",
]
