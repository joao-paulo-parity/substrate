[package]
name = "sc-service"
version = "0.10.0-dev"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
description = "Substrate service. Starts a thread that spins up the network, client, and extrinsic pool. Manages communication between them."
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[features]
default = ["rocksdb"]
# The RocksDB feature activates the RocksDB database backend. If it is not activated, and you pass
# a path to a database, an error will be produced at runtime.
rocksdb = ["sc-client-db/rocksdb"]
wasmtime = ["sc-executor/wasmtime"]
# exposes the client type
test-helpers = []
runtime-benchmarks = ["sc-client-db/runtime-benchmarks"]

[dependencies]
jsonrpsee = { version = "0.15.1", features = ["server"] , registry = "local" }
thiserror = { version = "1.0.30", registry = "local" }
futures = { version = "0.3.21", registry = "local" }
rand = { version = "0.7.3", registry = "local" }
parking_lot = { version = "0.12.1", registry = "local" }
log = { version = "0.4.17", registry = "local" }
futures-timer = { version = "3.0.1", registry = "local" }
exit-future = { version = "0.2.0", registry = "local" }
pin-project = { version = "1.0.12", registry = "local" }
hash-db = { version = "0.15.2", registry = "local" }
serde = { version = "1.0.136", registry = "local" }
serde_json = { version = "1.0.85", registry = "local" }
sc-keystore = { version = "4.0.0", path = "../keystore" , registry = "local" }
sp-runtime = { version = "6.0.0", path = "../../primitives/runtime" , registry = "local" }
sp-trie = { version = "6.0.0", path = "../../primitives/trie" , registry = "local" }
sp-externalities = { version = "0.12.0", path = "../../primitives/externalities" , registry = "local" }
sc-utils = { version = "13.0.0", path = "../utils" , registry = "local" }
sp-version = { version = "5.0.0", path = "../../primitives/version" , registry = "local" }
sp-blockchain = { version = "4.0.0-dev", path = "../../primitives/blockchain" , registry = "local" }
sp-core = { version = "6.0.0", path = "../../primitives/core" , registry = "local" }
sp-keystore = { version = "0.12.0", path = "../../primitives/keystore" , registry = "local" }
sp-session = { version = "4.0.0-dev", path = "../../primitives/session" , registry = "local" }
sp-state-machine = { version = "0.12.0", path = "../../primitives/state-machine" , registry = "local" }
sp-application-crypto = { version = "6.0.0", path = "../../primitives/application-crypto" , registry = "local" }
sp-consensus = { version = "0.10.0-dev", path = "../../primitives/consensus/common" , registry = "local" }
sc-consensus = { version = "0.10.0-dev", path = "../../client/consensus/common" , registry = "local" }
sp-inherents = { version = "4.0.0", path = "../../primitives/inherents" , registry = "local" }
sp-storage = { version = "6.0.0", path = "../../primitives/storage" , registry = "local" }
sc-network = { version = "0.10.0-dev", path = "../network" , registry = "local" }
sc-network-bitswap = { version = "0.10.0-dev", path = "../network/bitswap" , registry = "local" }
sc-network-common = { version = "0.10.0-dev", path = "../network/common" , registry = "local" }
sc-network-light = { version = "0.10.0-dev", path = "../network/light" , registry = "local" }
sc-network-sync = { version = "0.10.0-dev", path = "../network/sync" , registry = "local" }
sc-network-transactions = { version = "0.10.0-dev", path = "../network/transactions" , registry = "local" }
sc-chain-spec = { version = "4.0.0-dev", path = "../chain-spec" , registry = "local" }
sc-client-api = { version = "4.0.0-dev", path = "../api" , registry = "local" }
sp-api = { version = "4.0.0-dev", path = "../../primitives/api" , registry = "local" }
sc-client-db = { version = "0.10.0-dev", default-features = false, path = "../db" , registry = "local" }
codec = { package = "parity-scale-codec", version = "3.0.0" , registry = "local" }
sc-executor = { version = "0.10.0-dev", path = "../executor" , registry = "local" }
sc-transaction-pool = { version = "4.0.0-dev", path = "../transaction-pool" , registry = "local" }
sp-transaction-pool = { version = "4.0.0-dev", path = "../../primitives/transaction-pool" , registry = "local" }
sc-transaction-pool-api = { version = "4.0.0-dev", path = "../transaction-pool/api" , registry = "local" }
sp-transaction-storage-proof = { version = "4.0.0-dev", path = "../../primitives/transaction-storage-proof" , registry = "local" }
sc-rpc-server = { version = "5.0.0", path = "../rpc-servers" , registry = "local" }
sc-rpc = { version = "4.0.0-dev", path = "../rpc" , registry = "local" }
sc-rpc-spec-v2 = { version = "0.10.0-dev", path = "../rpc-spec-v2" , registry = "local" }
sc-block-builder = { version = "0.10.0-dev", path = "../block-builder" , registry = "local" }
sp-block-builder = { version = "4.0.0-dev", path = "../../primitives/block-builder" , registry = "local" }
sc-informant = { version = "0.10.0-dev", path = "../informant" , registry = "local" }
sc-telemetry = { version = "8.0.0", path = "../telemetry" , registry = "local" }
sc-offchain = { version = "4.0.0-dev", path = "../offchain" , registry = "local" }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", path = "../../utils/prometheus", version = "0.17.0", registry = "local" }
sc-tracing = { version = "4.0.0-dev", path = "../tracing" , registry = "local" }
sp-tracing = { version = "6.0.0", path = "../../primitives/tracing" , registry = "local" }
sc-sysinfo = { version = "6.0.0", path = "../sysinfo" , registry = "local" }
tracing = { version = "0.1.29", registry = "local" }
tracing-futures = { version = "0.2.4" , registry = "local" }
parity-util-mem = { version = "0.12.0", default-features = false, features = [
	"primitive-types",
] , registry = "local" }
async-trait = { version = "0.1.57", registry = "local" }
tokio = { version = "1.17.0", features = ["time", "rt-multi-thread", "parking_lot"] , registry = "local" }
tempfile = { version = "3.1.0", registry = "local" }
directories = { version = "4.0.1", registry = "local" }
static_init = { version = "1.0.3", registry = "local" }

[dev-dependencies]
substrate-test-runtime-client = { version = "2.0.0", path = "../../test-utils/runtime/client" , registry = "local" }
substrate-test-runtime = { version = "2.0.0", path = "../../test-utils/runtime/" , registry = "local" }
async-std = { version = "1.11.0", default-features = false , registry = "local" }
