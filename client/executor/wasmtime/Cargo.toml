[package]
name = "sc-executor-wasmtime"
version = "0.10.0-dev"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
description = "Defines a `WasmRuntime` that uses the Wasmtime JIT to execute."
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
cfg-if = { version = "1.0", registry = "local" }
codec = { package = "parity-scale-codec", version = "3.0.0" , registry = "local" }
libc = { version = "0.2.121", registry = "local" }
log = { version = "0.4.17", registry = "local" }
parity-wasm = { version = "0.45", registry = "local" }

# When bumping wasmtime do not forget to also bump rustix
# to exactly the same version as used by wasmtime!
wasmtime = { version = "1.0.0", default-features = false, features = [
	"cache",
	"cranelift",
	"jitdump",
	"parallel-compilation",
	"memory-init-cow",
	"pooling-allocator",
] , registry = "local" }
sc-allocator = { version = "4.1.0-dev", path = "../../allocator" , registry = "local" }
sc-executor-common = { version = "0.10.0-dev", path = "../common" , registry = "local" }
sp-runtime-interface = { version = "6.0.0", path = "../../../primitives/runtime-interface" , registry = "local" }
sp-sandbox = { version = "0.10.0-dev", path = "../../../primitives/sandbox" , registry = "local" }
sp-wasm-interface = { version = "7.0.0", features = ["wasmtime"], path = "../../../primitives/wasm-interface" , registry = "local" }

# Here we include the rustix crate in the exactly same semver-compatible version as used by
# wasmtime and enable its 'use-libc' flag.
#
# By default rustix directly calls the appropriate syscalls completely bypassing libc;
# this doesn't have any actual benefits for us besides making it harder to debug memory
# problems (since then `mmap` etc. cannot be easily hooked into).
rustix = { version = "0.35.9", default-features = false, features = ["std", "mm", "fs", "param", "use-libc"] , registry = "local" }
once_cell = { version = "1.12.0", registry = "local" }

[dev-dependencies]
wat = { version = "1.0", registry = "local" }
sc-runtime-test = { version = "2.0.0", path = "../runtime-test" , registry = "local" }
sp-io = { version = "6.0.0", path = "../../../primitives/io" , registry = "local" }
tempfile = { version = "3.3.0", registry = "local" }
paste = { version = "1.0", registry = "local" }
