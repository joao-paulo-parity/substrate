[package]
description = "Substrate network protocol"
name = "sc-network"
version = "0.10.0-dev"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
documentation = "https://docs.rs/sc-network"
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
array-bytes = { version = "4.1", registry = "local" }
async-trait = { version = "0.1", registry = "local" }
asynchronous-codec = { version = "0.6", registry = "local" }
bitflags = { version = "1.3.2", registry = "local" }
bytes = { version = "1", registry = "local" }
cid = { version = "0.8.4", registry = "local" }
codec = { package = "parity-scale-codec", version = "3.0.0", features = ["derive"] , registry = "local" }
either = { version = "1.5.3", registry = "local" }
fnv = { version = "1.0.6", registry = "local" }
futures = { version = "0.3.21", registry = "local" }
futures-timer = { version = "3.0.2", registry = "local" }
ip_network = { version = "0.4.1", registry = "local" }
libp2p = { version = "0.49.0", features = ["async-std", "dns", "identify", "kad", "mdns-async-io", "mplex", "noise", "ping", "tcp", "yamux", "websocket"] , registry = "local" }
linked_hash_set = { version = "0.1.3", registry = "local" }
linked-hash-map = { version = "0.5.4", registry = "local" }
log = { version = "0.4.17", registry = "local" }
lru = { version = "0.8.1", registry = "local" }
parking_lot = { version = "0.12.1", registry = "local" }
pin-project = { version = "1.0.12", registry = "local" }
prost = { version = "0.11", registry = "local" }
rand = { version = "0.7.2", registry = "local" }
serde = { version = "1.0.136", features = ["derive"] , registry = "local" }
serde_json = { version = "1.0.85", registry = "local" }
smallvec = { version = "1.8.0", registry = "local" }
thiserror = { version = "1.0", registry = "local" }
unsigned-varint = { version = "0.7.1", features = ["futures", "asynchronous_codec"] , registry = "local" }
zeroize = { version = "1.4.3", registry = "local" }
fork-tree = { version = "7.0.0", path = "../../utils/fork-tree" , registry = "local" }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", version = "0.17.0", path = "../../utils/prometheus" , registry = "local" }
sc-block-builder = { version = "0.10.0-dev", path = "../block-builder" , registry = "local" }
sc-client-api = { version = "4.0.0-dev", path = "../api" , registry = "local" }
sc-consensus = { version = "0.10.0-dev", path = "../consensus/common" , registry = "local" }
sc-network-common = { version = "0.10.0-dev", path = "./common" , registry = "local" }
sc-peerset = { version = "7.0.0", path = "../peerset" , registry = "local" }
sc-utils = { version = "13.0.0", path = "../utils" , registry = "local" }
sp-arithmetic = { version = "6.0.0", path = "../../primitives/arithmetic" , registry = "local" }
sp-blockchain = { version = "4.0.0-dev", path = "../../primitives/blockchain" , registry = "local" }
sp-consensus = { version = "0.10.0", path = "../../primitives/consensus/common" , registry = "local" }
sp-core = { version = "6.0.0", path = "../../primitives/core" , registry = "local" }
sp-runtime = { version = "6.0.0", path = "../../primitives/runtime" , registry = "local" }

[dev-dependencies]
assert_matches = { version = "1.3", registry = "local" }
async-std = { version = "1.11.0", features = ["attributes"] , registry = "local" }
rand = { version = "0.7.2", registry = "local" }
tempfile = { version = "3.1.0", registry = "local" }
sc-network-light = { version = "0.10.0-dev", path = "./light" , registry = "local" }
sc-network-sync = { version = "0.10.0-dev", path = "./sync" , registry = "local" }
sp-test-primitives = { version = "2.0.0", path = "../../primitives/test-primitives" , registry = "local" }
sp-tracing = { version = "6.0.0", path = "../../primitives/tracing" , registry = "local" }
substrate-test-runtime = { version = "2.0.0", path = "../../test-utils/runtime" , registry = "local" }
substrate-test-runtime-client = { version = "2.0.0", path = "../../test-utils/runtime/client" , registry = "local" }

[features]
default = []
