[package]
name = "node-cli"
version = "3.0.0-dev"
authors = ["Parity Technologies <admin@parity.io>"]
description = "Generic Substrate node implementation in Rust."
build = "build.rs"
edition = "2021"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
default-run = "substrate"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"

[package.metadata.wasm-pack.profile.release]
# `wasm-opt` has some problems on linux, see
# https://github.com/rustwasm/wasm-pack/issues/781 etc.
wasm-opt = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[badges]
travis-ci = { repository = "paritytech/substrate" }
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "paritytech/substrate" }
is-it-maintained-open-issues = { repository = "paritytech/substrate" }

[[bin]]
name = "substrate"
path = "bin/main.rs"
required-features = ["cli"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
array-bytes = { version = "4.1", registry = "local" }
clap = { version = "4.0.9", features = ["derive"], optional = true , registry = "local" }
codec = { package = "parity-scale-codec", version = "3.0.0" , registry = "local" }
serde = { version = "1.0.136", features = ["derive"] , registry = "local" }
jsonrpsee = { version = "0.15.1", features = ["server"] , registry = "local" }
futures = { version = "0.3.21", registry = "local" }
log = { version = "0.4.17", registry = "local" }
rand = { version = "0.8", registry = "local" }

# primitives
sp-authority-discovery = { version = "4.0.0-dev", path = "../../../primitives/authority-discovery" , registry = "local" }
sp-consensus-babe = { version = "0.10.0-dev", path = "../../../primitives/consensus/babe" , registry = "local" }
grandpa-primitives = { version = "4.0.0-dev", package = "sp-finality-grandpa", path = "../../../primitives/finality-grandpa" , registry = "local" }
sp-api = { version = "4.0.0-dev", path = "../../../primitives/api" , registry = "local" }
sp-core = { version = "6.0.0", path = "../../../primitives/core" , registry = "local" }
sp-runtime = { version = "6.0.0", path = "../../../primitives/runtime" , registry = "local" }
sp-timestamp = { version = "4.0.0-dev", path = "../../../primitives/timestamp" , registry = "local" }
sp-authorship = { version = "4.0.0-dev", path = "../../../primitives/authorship" , registry = "local" }
sp-inherents = { version = "4.0.0-dev", path = "../../../primitives/inherents" , registry = "local" }
sp-keyring = { version = "6.0.0", path = "../../../primitives/keyring" , registry = "local" }
sp-keystore = { version = "0.12.0", path = "../../../primitives/keystore" , registry = "local" }
sp-consensus = { version = "0.10.0-dev", path = "../../../primitives/consensus/common" , registry = "local" }
sp-transaction-pool = { version = "4.0.0-dev", path = "../../../primitives/transaction-pool" , registry = "local" }
sp-transaction-storage-proof = { version = "4.0.0-dev", path = "../../../primitives/transaction-storage-proof" , registry = "local" }

# client dependencies
sc-client-api = { version = "4.0.0-dev", path = "../../../client/api" , registry = "local" }
sc-chain-spec = { version = "4.0.0-dev", path = "../../../client/chain-spec" , registry = "local" }
sc-consensus = { version = "0.10.0-dev", path = "../../../client/consensus/common" , registry = "local" }
sc-transaction-pool = { version = "4.0.0-dev", path = "../../../client/transaction-pool" , registry = "local" }
sc-transaction-pool-api = { version = "4.0.0-dev", path = "../../../client/transaction-pool/api" , registry = "local" }
sc-network = { version = "0.10.0-dev", path = "../../../client/network" , registry = "local" }
sc-network-common = { version = "0.10.0-dev", path = "../../../client/network/common" , registry = "local" }
sc-consensus-slots = { version = "0.10.0-dev", path = "../../../client/consensus/slots" , registry = "local" }
sc-consensus-babe = { version = "0.10.0-dev", path = "../../../client/consensus/babe" , registry = "local" }
sc-consensus-uncles = { version = "0.10.0-dev", path = "../../../client/consensus/uncles" , registry = "local" }
grandpa = { version = "0.10.0-dev", package = "sc-finality-grandpa", path = "../../../client/finality-grandpa" , registry = "local" }
sc-rpc = { version = "4.0.0-dev", path = "../../../client/rpc" , registry = "local" }
sc-basic-authorship = { version = "0.10.0-dev", path = "../../../client/basic-authorship" , registry = "local" }
sc-service = { version = "0.10.0-dev", default-features = false, path = "../../../client/service" , registry = "local" }
sc-telemetry = { version = "8.0.0", path = "../../../client/telemetry" , registry = "local" }
sc-executor = { version = "0.10.0-dev", path = "../../../client/executor" , registry = "local" }
sc-authority-discovery = { version = "0.10.0-dev", path = "../../../client/authority-discovery" , registry = "local" }
sc-sync-state-rpc = { version = "0.10.0-dev", path = "../../../client/sync-state-rpc" , registry = "local" }
sc-sysinfo = { version = "6.0.0-dev", path = "../../../client/sysinfo" , registry = "local" }

# frame dependencies
frame-system = { version = "4.0.0-dev", path = "../../../frame/system" , registry = "local" }
frame-system-rpc-runtime-api = { version = "4.0.0-dev", path = "../../../frame/system/rpc/runtime-api" , registry = "local" }
pallet-transaction-payment = { version = "4.0.0-dev", path = "../../../frame/transaction-payment" , registry = "local" }
pallet-asset-tx-payment = { version = "4.0.0-dev", path = "../../../frame/transaction-payment/asset-tx-payment/" , registry = "local" }
pallet-im-online = { version = "4.0.0-dev", default-features = false, path = "../../../frame/im-online" , registry = "local" }

# node-specific dependencies
kitchensink-runtime = { version = "3.0.0-dev", path = "../runtime" , registry = "local" }
node-rpc = { version = "3.0.0-dev", path = "../rpc" , registry = "local" }
node-primitives = { version = "2.0.0", path = "../primitives" , registry = "local" }
node-executor = { version = "3.0.0-dev", path = "../executor" , registry = "local" }

# CLI-specific dependencies
sc-cli = { version = "0.10.0-dev", optional = true, path = "../../../client/cli" , registry = "local" }
frame-benchmarking-cli = { version = "4.0.0-dev", optional = true, path = "../../../utils/frame/benchmarking-cli" , registry = "local" }
node-inspect = { version = "0.9.0-dev", optional = true, path = "../inspect" , registry = "local" }
try-runtime-cli = { version = "0.10.0-dev", optional = true, path = "../../../utils/frame/try-runtime/cli" , registry = "local" }
serde_json = { version = "1.0.85", registry = "local" }

[target.'cfg(any(target_arch="x86_64", target_arch="aarch64"))'.dependencies]
node-executor = { version = "3.0.0-dev", path = "../executor", features = ["wasmtime"] , registry = "local" }
sc-cli = { version = "0.10.0-dev", optional = true, path = "../../../client/cli", features = ["wasmtime"] , registry = "local" }
sc-service = { version = "0.10.0-dev", default-features = false, path = "../../../client/service", features = [
	"wasmtime",
] , registry = "local" }
sp-trie = { version = "6.0.0", default-features = false, path = "../../../primitives/trie", features = [
	"memory-tracker",
] , registry = "local" }

[dev-dependencies]
sc-keystore = { version = "4.0.0-dev", path = "../../../client/keystore" , registry = "local" }
sc-client-db = { version = "0.10.0-dev", path = "../../../client/db" , registry = "local" }
sc-consensus = { version = "0.10.0-dev", path = "../../../client/consensus/common" , registry = "local" }
sc-consensus-babe = { version = "0.10.0-dev", path = "../../../client/consensus/babe" , registry = "local" }
sc-consensus-epochs = { version = "0.10.0-dev", path = "../../../client/consensus/epochs" , registry = "local" }
sc-service-test = { version = "2.0.0", path = "../../../client/service/test" , registry = "local" }
sc-block-builder = { version = "0.10.0-dev", path = "../../../client/block-builder" , registry = "local" }
sp-tracing = { version = "5.0.0", path = "../../../primitives/tracing" , registry = "local" }
sp-blockchain = { version = "4.0.0-dev", path = "../../../primitives/blockchain" , registry = "local" }
futures = { version = "0.3.21", registry = "local" }
tempfile = { version = "3.1.0", registry = "local" }
assert_cmd = { version = "2.0.2", registry = "local" }
nix = { version = "0.23", registry = "local" }
serde_json = { version = "1.0", registry = "local" }
regex = { version = "1.6.0", registry = "local" }
platforms = { version = "2.0", registry = "local" }
async-std = { version = "1.11.0", features = ["attributes"] , registry = "local" }
soketto = { version = "0.7.1", registry = "local" }
criterion = { version = "0.3.5", features = ["async_tokio"] , registry = "local" }
tokio = { version = "1.17.0", features = ["macros", "time", "parking_lot"] , registry = "local" }
wait-timeout = { version = "0.2", registry = "local" }
substrate-rpc-client = { path = "../../../utils/frame/rpc/client" , registry = "local" }
pallet-timestamp = { version = "4.0.0-dev", path = "../../../frame/timestamp" , registry = "local" }

[build-dependencies]
clap = { version = "4.0.9", optional = true , registry = "local" }
clap_complete = { version = "4.0.2", optional = true , registry = "local" }
node-inspect = { version = "0.9.0-dev", optional = true, path = "../inspect" , registry = "local" }
frame-benchmarking-cli = { version = "4.0.0-dev", optional = true, path = "../../../utils/frame/benchmarking-cli" , registry = "local" }
substrate-build-script-utils = { version = "7.0.0", optional = true, path = "../../../utils/build-script-utils" , registry = "local" }
substrate-frame-cli = { version = "4.0.0-dev", optional = true, path = "../../../utils/frame/frame-utilities-cli" , registry = "local" }
try-runtime-cli = { version = "0.10.0-dev", optional = true, path = "../../../utils/frame/try-runtime/cli" , registry = "local" }
sc-cli = { version = "0.10.0-dev", path = "../../../client/cli", optional = true , registry = "local" }
pallet-balances = { version = "4.0.0-dev", path = "../../../frame/balances" , registry = "local" }

[features]
default = ["cli"]
cli = [
	"node-inspect",
	"sc-cli",
	"frame-benchmarking-cli",
	"substrate-frame-cli",
	"sc-service/rocksdb",
	"clap",
	"clap_complete",
	"substrate-build-script-utils",
	"try-runtime-cli",
]
runtime-benchmarks = [
	"kitchensink-runtime/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks"
]
# Enable features that allow the runtime to be tried and debugged. Name might be subject to change
# in the near future.
try-runtime = ["kitchensink-runtime/try-runtime", "try-runtime-cli/try-runtime"]

[[bench]]
name = "transaction_pool"
harness = false

[[bench]]
name = "block_production"
harness = false
